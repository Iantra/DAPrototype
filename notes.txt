1. Set up working environment (Could be skipped if HDMI display is used (recommended))
	1.1 Connect external HDMI monitor

	1.2 Load NOOBS (V2.9) on SD card

	1.3 Boot up and install Raspbian (V4.14)

	--Step 1.4-1.5 only for Adafruit display, with 7" raspi display it's not necessary

	1.4 Run the following commands and go through the setup process:
		cd ~
		wget https://raw.githubusercontent.com/adafruit/Raspberry-Pi-Installer-Scripts/master/adafruit-pitft.sh
		chmod +x adafruit-pitft.sh
		sudo ./adafruit-pitft.sh

	1.5 Reboot and confirm the display is working

	At this point, developing on the display is possible, although not recommended (major PITA), in general SSHing or using git is a better idea

2. Install Dependencies
	2.1 Install OpenCV (https://docs.opencv.org/3.1.0/d7/d9f/tutorial_linux_install.html)

	sudo apt-get install build-essential
	sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
	sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
	git clone https://github.com/Itseez/opencv.git
	cd opencv
	mkdir build
	cd build
	cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..
	make -j4
	sudo make install

	2.2 Install Raspicam:
		git clone https://github.com/cedricve/raspicam .
		cd raspicam
		mkdir build
		cd build
		cmake ..
		make
		sudo make install
		sudo ldconfig
	
	2.3 Install libGPS (Maybe not needed until gps functionality is checked):
		apt-get install libgps-dev

	2.4 (?) Install WiringPi

	
3. Install Nate Greco's DAPrototype
	3.1 Get files:
		git clone https://github.com/Iantra/DAPrototype
	
	3.2 Build: 
		cd DAPrototype
		mkdir build
		cd build
		cmake .. -Draspicam_DIR=/usr/local/lib/cmake/
		make
		
---------Extras
-Check if camera is working:
vcgencmd get_camera
user:pi, pass:raspi

-Autorun:
sudo nano /home/pi/.config/lxsession/LXDE-pi/autostart

CV stuff
https://docs.opencv.org/2.4/doc/tutorials/imgproc/shapedescriptors/find_contours/find_contours.html 
http://mftp.mmcheng.net/Papers/DenseCut.pdf
https://docs.opencv.org/3.1.0/d7/d4d/tutorial_py_thresholding.html

Feature matching: https://se.mathworks.com/help/vision/examples/object-detection-in-a-cluttered-scene-using-point-feature-matching.html
